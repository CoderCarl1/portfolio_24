@use '../abstracts/' as *;

.hero {
  --animation-timing: 350ms;
  --height: calc(100dvh - #{size(48)});
  width: 100%;

  .hero__text {
    position: relative;
    height: fit-content;
    padding: size(16) size(16);
    text-align: center;
    width: min(100% - 1em, 20ch);
    margin-inline: auto;
    &:after {
      content: '';
      position: absolute;
      inset: 0;
      background-color: rgba(clr(secondary, 100), 0.25);
      border-radius: 12px;
      z-index: -1;
    }
  }

  .hero__image {
    position: relative;
    z-index: 0;
    overflow: hidden;
    height: fit-content;

    &:before,
    &:after {
      content: '';
      position: absolute;
      border-radius: 8px;
      opacity: 0;
      transition-duration: 0s;
      transition-delay: var(--animation-timing);
      transition-property: opacity;
      transition-timing-function: cubic-bezier(0, 0, 0, 2.54);
      mix-blend-mode: hard-light;
    }
    &:before {
      inset: 12% 10% 12.5% 10%;
      outline: 8px solid clr(neutral, 100);
      border-radius: 8px;
      transform: rotate(16deg);
      z-index: 2;
      background-color: clr(secondary, 300);
    }
    &:after {
      top: 10%;
      left: 20%;
      height: 50%;
      aspect-ratio: 1;
      outline: 8px solid white;
      transform: rotate(-25deg);
      z-index: -1;
      background-color: clr(secondary, 200);
    }
    &--photo {
      transition: transform var(--animation-timing) ease-in-out;
    }

    &--blobs {
      $color: clr(secondary, 200);
      --blob-color-1: #{darken($color, 15)};
      --blob-color-2: #{$color};
      --blob-color-3: #{lighten($color, 15)};
      position: absolute;
      z-index: -1;
      height: 50%;
      width: 300%;
      top: 0;
      left: -200%;
      display: grid;
      gap: 0;
      grid-auto-flow: column;
      grid-auto-columns: 1fr;
      // transform-origin: right center;
      transition: transform var(--animation-timing) ease-in-out;
      &>svg {
        height: 150%;
        width: 100%;
        opacity: 0;
        transition: opacity var(--animation-timing) ease-in-out;
        &:nth-child(3){
          opacity: 1;
        }
      }

      @for $i from 1 through 3 {
        &>svg:nth-child(#{$i}) {
          fill: var(--blob-color-#{$i});
        }
      }
    }

  }
  &:where(:hover, :focus-within) {
    .hero__image:before,
    .hero__image:after {
      opacity: 1;
    }
    .hero__image--photo {
      transform: scale(105%);
    }

    .hero__image--blobs {
      transform: translateX(67.5%);

      &>svg {
        opacity: 1;
      }
    }
  }
@media screen and (width < bp(medium)){
  .hero__image {
    width: fit-content;
  }
  .hero__image--photo {
    height: 25vh;
  }
}
  @include mq(medium) {
    --flow-spacer: 0;
    height: var(--height, 100dvh);

    .hero__text {
      &:after {
        background-color: transparent;
        // box-shadow:
        //   -2px 0px 0px 0px clr(secondary, 100),
        //   -4px 0px 0px 0px clr(secondary, 200),
        //   -6px 0px 0px 0px clr(secondary, 100);
      }

    }
  }
}