@charset "UTF-8";
body {
  font-size: 1.125rem;
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Limit line sizes */
h1,
h2,
h3,
h4,
p,
caption,
dd,
blockquote {
  max-width: 70ch;
  text-wrap: pretty;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
  font-weight: 400;
}

ul {
  padding-inline-start: 1em;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

p {
  text-align: left;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
  shape-margin: 0.75rem;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

table {
  width: 100%;
  border-collapse: collapse;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@media print {
  body {
    font-size: 6pt;
    color: #000;
    background-color: #fff;
    background-image: none;
    margin: 0;
    padding: 0;
  }
  table {
    page-break-inside: avoid;
  }
  th {
    color: #000;
    background-color: #fff;
    border-bottom: 1pt solid #000;
  }
  tr {
    border-top: 1pt solid #000;
  }
}
@media print and (max-width: 5in) {
  table {
    page-break-inside: auto;
  }
  caption {
    color: #000;
    background-color: #fff;
    border-bottom: 1pt solid #000;
  }
  tr {
    page-break-inside: avoid;
  }
}
.box-shadow-1 {
  box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.012), 0px 22px 18px rgba(0, 0, 0, 0.018), 0px 100px 80px rgba(0, 0, 0, 0.03);
}

.box-shadow-2 {
  box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.016), 0px 22px 18px rgba(0, 0, 0, 0.024), 0px 100px 80px rgba(0, 0, 0, 0.04);
}

.box-shadow-3 {
  box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.02), 0px 22px 18px rgba(0, 0, 0, 0.03), 0px 100px 80px rgba(0, 0, 0, 0.05);
}

.box-shadow-4 {
  box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.03), 0px 22px 18px rgba(0, 0, 0, 0.042), 0px 100px 80px rgba(0, 0, 0, 0.07);
}

.box-shadow-5 {
  box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.04), 0px 22px 18px rgba(0, 0, 0, 0.06), 0px 100px 80px rgba(0, 0, 0, 0.1);
}

.even-columns {
  --gap: 1.5rem;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}
.even-columns-row {
  --gap: 1.5rem;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}
@media screen and (width < 50em) {
  .even-columns-row {
    grid-auto-flow: row;
    gap: var(--gap);
  }
}

.columns-content\:left {
  display: grid;
  grid-template-columns: 1fr 1fr;
}
@media screen and (width < 62em) {
  .columns-content\:left {
    grid-template-columns: 1fr;
  }
}
.columns-content\:left > * {
  display: inline-grid;
  grid-column: span 1;
}
@media screen and (width < 30em) {
  .columns-content\:left > * {
    margin-inline: auto;
  }
}

.containing-wrapper {
  width: clamp(280px, 100% - 2rem, 80em);
  margin-inline: auto;
}

.container-large {
  width: min(100% - 2rem, 50em);
  margin-inline: auto;
}

.container-medium {
  width: min(100% - 2rem, 50em);
  margin-inline-end: auto;
}

.container-small {
  width: min(100% - 2rem, 30em);
  margin-inline-end: auto;
}

.block {
  display: block;
}

.relative {
  display: relative;
}

.flex {
  display: flex;
  justify-content: var(--justify-content);
  align-items: var(--align-content);
  gap: var(--gap, 0.5rem);
}
.flex > * {
  flex-basis: var(--flex-basis, auto);
}

.grow\:0 {
  flex-grow: 0;
}

.shrink\:0 {
  flex-shrink: 0;
}

.justify\:center {
  --justify-content: center;
}

.justify\:between {
  --justify-content: space-between;
}

.justify\:evenly {
  --justify-content: space-evenly;
}

.align\:center {
  --align-items: center;
}

.align\:top {
  --align-items: flex-start;
}

.align\:bottom {
  --align-items: flex-end;
}

.basis\:20 {
  --flex-basis: 20%;
}

.basis\:40 {
  --flex-basis: 40%;
}

.basis\:50 {
  --flex-basis: 50%;
}

.basis\:60 {
  --flex-basis: 60%;
}

.basis\:80 {
  --flex-basis: 80%;
}

.basis\:100 {
  --flex-basis: 100%;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-spacer, 1rem);
}

.flow\:8 > *:where(:not(:first-child)) {
  margin-top: 0.5rem;
}

.flow\:16 > *:where(:not(:first-child)) {
  margin-top: 1rem;
}

.flow\:32 > *:where(:not(:first-child)) {
  margin-top: 2rem;
}

.grid {
  display: grid;
}

.gap\:8 {
  gap: 0.5rem;
}

.gap\:16 {
  gap: 1rem;
}

.gap\:24 {
  gap: 1.5rem;
}

.align\:center {
  align-items: center;
}

.justify\:center {
  justify-content: center;
}

.anchor-hash {
  font-size: 0.5em;
  color: rgb(153, 153, 153);
  text-decoration: none;
}
.anchor-hash:hover, .anchor-hash:focus {
  color: rgb(67, 49, 155);
}

@media screen and (width < 50em) {
  ul li:where(:not(:first-child)) {
    margin-top: 0.5rem;
  }
}
.margin-x\:auto {
  margin-inline: auto;
}

.uppercase {
  text-transform: uppercase;
}

span.text\:left,
span.text\:center {
  display: block;
}

.text\:left {
  text-align: left;
}

.text\:center {
  text-align: center;
}

.bold {
  font-weight: 700;
}

.italic {
  font-style: italic;
}

.fs\:900 {
  font-size: clamp(2.5rem, 0.5rem + 10vw, 5rem);
  line-height: 1.1;
}

.fs\:800 {
  font-size: clamp(2.5rem, 0.5rem + 7vw, 3.75rem);
  line-height: 1.1;
}

.fs\:600 {
  font-size: clamp(1.4rem, 0.5rem + 3vw, 1.6875rem);
}

.fs\:500 {
  font-size: 1.3125rem;
}

.fs\:400 {
  font-size: 1.125rem;
}

.fs\:300 {
  font-size: 1rem;
}

.fs\:200 {
  font-size: 0.65rem;
}

.ff-sans {
  font-family: Avenir, Montserrat, Corbel, "URW Gothic", source-sans-pro, sans-serif;
}

.ff-serif {
  font-family: ui-serif, Georgia, serif;
}

.decoration\:underline {
  text-decoration: underline;
}

.decoration\:none {
  text-decoration: none;
}

.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.button {
  --_button-bg-color: var(--button-bg-color, transparent);
  --_button-color: var(--button-color, rgb(42, 31, 97));
  --_button-border-color: var(--button-border-color, rgba(34, 15, 240, 0.15));
  --_button-outline-color: var(--button-color, rgba(34, 15, 240, 0.15));
  --_button-border-radius: var(--button-border-radius, 0.125em);
  --_button-padding: var(--button-padding, 0.25em .5em);
  background-color: var(--_button-bg-color);
  color: var(--_button-color);
  cursor: pointer;
  padding: var(--_button-padding);
  text-align: center;
  text-decoration: none;
  transition: all 250ms;
  border: 1px solid var(--_button-border-color);
  border-radius: var(--_button-border-radius);
  text-transform: capitalize;
}

.button.no-border {
  --button-border-color: transparent;
}

.button.icon {
  --button-padding: 0;
}

:where(.button:hover:not([disabled])) {
  --button-bg-color: #fff;
  box-shadow: -0.125em -0.125em 0.5em 0 var(--_button-bg-color), 0.125em 0.125em 0.5em 0 var(--_button-border-color);
}

.button:active:not([disabled]) {
  outline: 1px solid var(--_button-outline-color);
  outline-offset: -1px;
  transform: scale(0.975);
  transition: background-color 0.1s ease-in-out, color 0.1s ease-in-out;
}

.button[disabled] {
  --button-color: rgb(204, 204, 204);
  font-style: italic;
  cursor: default;
}

.button.primary {
  --button-bg-color: #FFF;
  --button-color: rgb(50, 37, 116);
  --button-border-color: rgb(50, 37, 116);
}
.button.primary:hover:not([disabled]) {
  --button-border-color: rgb(67, 49, 155);
}

.button.secondary {
  --button-bg-color: #FFF;
  --button-color: #394140;
  --button-border-color: #6c9378;
}
.button.secondary:hover:not([disabled]) {
  --button-border-color: #9be9cc;
}

.contact__form {
  padding: 0.5rem 1rem;
  position: relative;
}
.contact__form--legend {
  background-color: white;
  padding-inline: 0.5rem;
}
.contact__form textarea {
  width: 100%;
  margin-top: 1rem;
}
.contact__form textarea::placeholder {
  font-size: 125%;
  opacity: 0.5;
  top: 0.25em;
}

.contact__form .error {
  border: 1px solid red !important;
}

.success.shown {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #6c9378;
  background-color: white;
  outline: 2px solid #9be9cc;
  padding: 0.5em 2em;
  font-size: clamp(1.4rem, 0.5rem + 3vw, 1.6875rem);
  border-radius: 4px;
}

:where(.contact__form .error_message) {
  height: 1lh;
  display: inline-block;
  min-width: 1px;
  color: red;
}
:where(.contact__form .error_message).shown::after {
  content: "⚠️";
}

.input {
  padding: 1em 0.5em 0;
}

textarea {
  padding: 0.5em;
}

.input-wrapper.floating {
  display: block;
  position: relative;
}
.input-wrapper.floating label {
  position: absolute;
  left: 0.5em;
  top: 0;
  cursor: text;
  font-size: 75%;
  opacity: 1;
  transition: all 0.2s;
  pointer-events: none;
}
.input-wrapper.floating input:focus-within ~ label,
.input-wrapper.floating input:not(:placeholder-shown) ~ label {
  color: rgb(67, 49, 155);
}
.input-wrapper.floating input:focus-within {
  color: rgb(64, 64, 64);
}
.input-wrapper.floating input:focus-within::placeholder {
  color: rgb(153, 153, 153);
}
.input-wrapper.floating input {
  font-size: inherit;
  margin-bottom: 2px;
  border: 0;
  border-radius: 0;
  border-bottom: 2px solid hsla(0, 0%, 0%, 0.1);
  width: 100%;
}
.input-wrapper.floating input::placeholder {
  opacity: 1;
}
.input-wrapper.floating input:placeholder-shown:not(:focus)::placeholder {
  opacity: 0;
}
.input-wrapper.floating input:placeholder-shown:not(:focus) + * {
  font-size: 125%;
  opacity: 0.5;
  top: 0.25em;
  left: 0.25em;
}
.input-wrapper.floating input:focus {
  outline: 1px solid rgba(34, 15, 240, 0.15);
  border-color: rgb(67, 49, 155);
}

.hero {
  --animation-timing: 350ms;
  --height: calc(100dvh - 3rem);
  width: 100%;
}
.hero .hero__text {
  height: fit-content;
  padding: 1rem 1rem;
  text-align: center;
  width: min(100% - 1em, 20ch);
}
@media screen and (width < 80em) {
  .hero .hero__text {
    margin-inline: auto;
  }
}
.hero .hero__image {
  position: relative;
  z-index: 0;
  overflow: hidden;
  height: fit-content;
}
.hero .hero__image:before, .hero .hero__image:after {
  content: "";
  position: absolute;
  border-radius: 8px;
  opacity: 0;
  transition-duration: 0s;
  transition-delay: var(--animation-timing);
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0, 0, 0, 2.54);
  mix-blend-mode: hard-light;
}
.hero .hero__image:before {
  inset: 12% 10% 12.5% 10%;
  outline: 8px solid rgb(252, 252, 252);
  border-radius: 8px;
  transform: rotate(16deg);
  z-index: 2;
  background-color: #6c9378;
}
.hero .hero__image:after {
  top: 10%;
  left: 20%;
  height: 50%;
  aspect-ratio: 1;
  outline: 8px solid white;
  transform: rotate(-25deg);
  z-index: -1;
  background-color: #9be9cc;
}
.hero .hero__image--photo {
  transition: transform var(--animation-timing) ease-in-out;
}
.hero .hero__image--blobs {
  --blob-color-1: #5cdbac;
  --blob-color-2: #9be9cc;
  --blob-color-3: #daf7ec;
  position: absolute;
  z-index: -1;
  height: 50%;
  width: 300%;
  top: 0;
  left: -200%;
  display: grid;
  gap: 0;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  transition: transform var(--animation-timing) ease-in-out;
}
.hero .hero__image--blobs > svg {
  height: 150%;
  width: 100%;
  opacity: 0;
  transition: opacity var(--animation-timing) ease-in-out;
}
.hero .hero__image--blobs > svg:nth-child(3) {
  opacity: 1;
}
.hero .hero__image--blobs > svg:nth-child(1) {
  fill: var(--blob-color-1);
}
.hero .hero__image--blobs > svg:nth-child(2) {
  fill: var(--blob-color-2);
}
.hero .hero__image--blobs > svg:nth-child(3) {
  fill: var(--blob-color-3);
}
.hero .hero__image:where(:hover, :focus-within):before, .hero .hero__image:where(:hover, :focus-within):after {
  opacity: 1;
}
.hero .hero__image:where(:hover, :focus-within) .hero__image--photo {
  transform: scale(105%);
}
.hero .hero__image:where(:hover, :focus-within) .hero__image--blobs {
  transform: translateX(67.5%);
}
.hero .hero__image:where(:hover, :focus-within) .hero__image--blobs > svg {
  opacity: 1;
}
@media screen and (width < 50em) {
  .hero .hero__image {
    width: fit-content;
  }
  .hero .hero__image--photo {
    height: 25vh;
  }
}
@media screen and (min-width: 50em) {
  .hero {
    --flow-spacer: 0;
    height: var(--height, 100dvh);
  }
  .hero .hero__text:after {
    background-color: transparent;
  }
}

.header {
  padding: 1rem 0.5rem;
  height: 3rem;
}
.header .logo__image {
  width: 64px;
  aspect-ratio: 1;
}
.header .logo__image img {
  transform: translateY(-0.5em);
}
.header .logo__heading {
  align-self: center;
}

@media screen and (width < 30em) {
  .header {
    padding: 0.5rem 0;
    flex-wrap: wrap;
    justify-content: center;
    height: 5lh;
  }
  .header .nav {
    flex-basis: 100%;
  }
}
.projects__wrapper {
  border-radius: 8px;
  padding: 1em;
  outline: 2px solid #9be9cc;
}

.section {
  padding: 1rem 0.5rem;
}
.section .section__child {
  border-radius: 8px;
  padding: 1em;
  outline: 2px solid #9be9cc;
}
.section .section__child--header {
  color: #1784a8;
}
.section .section__child:hover {
  outline-color: #1EC7FF;
}
.section .section__heading {
  color: rgb(153, 153, 153);
}
.section .fun-underline {
  position: relative;
  display: inline-block;
}
.section .fun-underline:nth-child(1):after {
  background-color: hsl(4, 45%, 50%);
}
.section .fun-underline:nth-child(2):after {
  background-color: hsl(104, 45%, 50%);
}
.section .fun-underline:nth-child(3):after {
  background-color: hsl(204, 45%, 50%);
}
.section .fun-underline:nth-child(4):after {
  background-color: hsl(304, 45%, 50%);
}
.section .fun-underline:nth-child(5):after {
  background-color: hsl(154, 45%, 50%);
}
.section .fun-underline:nth-child(6):after {
  background-color: hsl(254, 45%, 50%);
}
.section .fun-underline:nth-child(7):after {
  background-color: hsl(354, 45%, 50%);
}
.section .fun-underline:nth-child(8):after {
  background-color: hsl(54, 45%, 50%);
}
.section .fun-underline:nth-child(9):after {
  background-color: hsl(4, 45%, 50%);
}
.section .fun-underline:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.1lh;
  transform: scaleX(0);
  transition: transform 250ms ease-in-out;
  transform-origin: bottom right;
}
@media screen and (width < 50em) {
  .section .fun-underline:after {
    height: 0.05lh;
  }
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(1):after {
  transition-delay: 250ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(2):after {
  transition-delay: 500ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(3):after {
  transition-delay: 750ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(4):after {
  transition-delay: 1000ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(5):after {
  transition-delay: 1250ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(6):after {
  transition-delay: 1500ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(7):after {
  transition-delay: 1750ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(8):after {
  transition-delay: 2000ms;
}
.section:where(:focus-within, :hover) .fun-underline:nth-child(9):after {
  transition-delay: 2250ms;
}
.section:where(:focus-within, :hover) .fun-underline:after {
  transform: scaleX(1);
  transform-origin: bottom left;
}

.skiplink {
  position: fixed;
  transition: transform 250ms ease;
  z-index: 1;
}
.skiplink a {
  padding: 0.5rem 1rem;
  background-color: rgb(252, 252, 252);
}
.skiplink a:focus {
  outline: 2px solid rgb(42, 31, 97);
  outline-offset: -2px;
}
.skiplink:not(:focus-within) {
  transform: translateY(-1000px);
  opacity: 0;
}

/*# sourceMappingURL=styles.css.map */
